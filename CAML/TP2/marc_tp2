(* Karassev Marc *)

type 'a liste = vide | cons of  'a* 'a liste;;
let rec lignes = function canal ->
          try let une_ligne = input_line canal in
                cons(une_ligne, lignes canal)
          with End_of_file -> vide;;
let lire = function nom ->
       let canal = open_in nom in
          let resu = lignes canal in
               close_in canal; resu;;


let tete = function cons(x,_) -> x | _ -> failwith "impossible";;
let suite = function cons(_,y) -> y | _ -> failwith "impossible";;

let rec int_of_string_liste = function l -> if l = vide then vide else cons(int_of_string(tete(l)), int_of_string_liste(suite(l)));;

let rec somme = function l -> if l = vide then 0 else tete(l) + somme(suite(l));;
somme(int_of_string_liste(lire "donnees_int.dat"));;

let rec q2 = function l -> if l = vide then vide else if suite l = vide then failwith"incomplet" else l cons((tete l,int_of_string(tete(suite l))), q2(suite(suite(l))));;
q2(lire "donnees_string*int.txt");; 
